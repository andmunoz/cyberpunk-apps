from django.shortcuts import render, redirect, HttpResponse
import csv
from cpadmin.models import (
    ItemType, Category, Brand, Availability, SurgeryTypes, Surgery, CyberType, CyberSlot, Cyberware
)
from cpadmin.config import get_database


# Show cyberware list
def list(request):
    cyberwares = Cyberware.objects.all().order_by('name')
    cyberware_count = 0
    if cyberwares:
        cyberware_count = len(cyberwares)

    categories = Category.objects.filter(type='CYBER').order_by('name')
    brands = Brand.objects.filter(type='CYBER').order_by('name')
    availabilities = Availability.choices
    cyberware_types = CyberType.choices
    surgeries = SurgeryTypes.choices
    slots = CyberSlot.choices

    context = {
        'page_title': 'Ciberequipo',
        'cyberware_count': cyberware_count,
        'cyberwares': cyberwares,
        'categories': categories,
        'brands': brands,
        'availabilities': availabilities,
        'cyberware_types': cyberware_types,
        'surgeries': surgeries,
        'slots': slots,
    }
        
    return render(request, 'equipment/cyberware.html', context)


# Create an cyberware
def create(request):
    form = request.POST
    category = Category.objects.get(id=form['category'])
    brand = Brand.objects.get(id=form['brand'])
    surgery = Surgery.objects.get(id=form['surgery'])
    cyberware = Cyberware(
        name=form['name'],
        category=category,
        brand=brand,
        availability=form['availability'],
        type=form['type'],
        humanity=form['humanity'],
        adjustment=form['adjustment'],
        requirement=form['requirement'],
        slot=form['slot'],
        surgery=surgery,
        weight=float(form['weight']),
        cost=int(form['cost']),
        description=form['description'],
        image=form['image'],
    )
    cyberware.save()

    return redirect('cyberware')


# Update an cyberware
def update(request):
    form = request.POST
    cyberware = Cyberware.objects.get(id=form['id'])
    category = Category.objects.get(id=form['category'])
    brand = Brand.objects.get(id=form['brand'])
    surgery = Surgery.objects.get(id=form['surgery'])
    cyberware.name = form['name']
    cyberware.category = category
    cyberware.brand = brand
    cyberware.type = form['type']
    cyberware.humanity = form['humanity']
    cyberware.adjustment = form['adjustment']
    cyberware.requirement = form['requirement']
    cyberware.slot = form['slot']
    cyberware.surgery = surgery
    cyberware.weight = float(form['weight'])
    cyberware.cost = int(form['cost'])
    cyberware.description = form['description']
    cyberware.image = form['image']
    cyberware.save()
    
    return redirect('cyberware')


# Delete an cyberware
def delete(request):
    form = request.POST
    cyberware = Cyberware.objects.get(id=form['id'])
    cyberware.delete()
    return redirect('cyberware')


# Upload cyberware list from CSV
def upload(request):
    csv_file = request.FILES['csv_file'].read().decode('utf-8').splitlines()
    csv_reader = csv.DictReader(csv_file)

    for row in csv_reader:
        category = Category.objects.get(name=row['category'], type=ItemType.CYBER, parent=None)
        brand, _ = Brand.objects.get_or_create(
            name=row['brand'], type=ItemType.CYBER,
            defaults={'name': row['brand'], 'type': ItemType.CYBER, 'description': 'Autogenerated'})
        surgery = Surgery.objects.get(type=row['surgery'])

        Cyberware.objects.update_or_create(
            id=row['id'],
            defaults=dict(
                name=row['name'],
                category=category,
                brand=brand,
                availability=row['availability'],
                type=row['type'],
                humanity=row['humanity'],
                adjustment=row['adjustment'],
                requirement=row['requirement'],
                slot=row['slot'],
                surgery=surgery,
                weight=float(row['weight']),
                cost=int(row['cost']),
                description=row['description'],
                image=row['image'],
            )
        )
        
    return redirect('cyberware')


# Download cyberware list in CSV
def download(request):
    cyberwares = Cyberware.objects.all().order_by('name').values()
    response = HttpResponse(content_type='text/csv')
    response['Content-Disposition'] = 'attachment; filename="cyberwares.csv"'
    csv_writer = csv.writer(response)
    headers = False

    cyberwares_translated = []
    for cyberware in cyberwares:
        cyberware_translated = {}
        keys = cyberware.keys()
        for key in keys:
            value = cyberware[key]
            if key == 'category_id':
                category = Category.objects.get(id=value)
                cyberware_translated['category'] = category.code
            elif key == 'brand_id': 
                brand = Brand.objects.get(id=value)
                cyberware_translated['brand'] = brand.name
            else:
                cyberware_translated[key] = value
        cyberwares_translated.append(cyberware_translated)
    
    for cyberware in cyberwares_translated:
        if not headers:
            csv_writer.writerow(cyberware.keys())
            headers = True
        csv_writer.writerow(cyberware.values())
        
    return response


# Refresh cyberware list with Firebase
def refresh(request):
    database = get_database()
    if database is None:
        return redirect('cyberware') 
    source = request.POST['source']
    if source == 'local': 
        cyberware_local = Cyberware.objects.all().order_by('id').values()
        database.child('Catalog/Cyberware').remove()
        for cyberware in cyberware_local:
            database.child('Catalog/Cyberware').push(cyberware)
    else:
        cyberware_origin = database.child('Catalog/Cyberware').get()
        for cyberware_id, cyberware in cyberware_origin:
            category = Category.objects.get(code=cyberware.category, parent=None)
            brand, _ = Brand.objects.get_or_create(
                name=cyberware.brand, 
                defaults={'name': cyberware.brand, 'type': ItemType.CYBER, 'description': 'Autogenerated'})
            surgery = Surgery.objects.get(type=cyberware.surgery)
            
            Cyberware.objects.update_or_create(
                id=cyberware_id,
                defaults=dict(
                    name=cyberware.name,
                    category=category,
                    brand=brand,
                    availability=cyberware.availability,
                    type=cyberware.type,
                    humanity=cyberware.humanity,
                    adjustment=cyberware.adjustment,
                    requirement=cyberware.requirement,
                    slot=cyberware.slot,
                    surgery=surgery,
                    weight=cyberware.weight,
                    cost=cyberware.cost,
                    description=cyberware.description,
                    image=cyberware.image,
                ),
            )

    return redirect('cyberware')
